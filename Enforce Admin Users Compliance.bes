<?xml version="1.0" encoding="UTF-8"?>
<BES xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="BES.xsd">
	<Fixlet>
		<Title>Enforce Admin Users Compliance</Title>
		<Description><![CDATA[<P><FONT size=3 face=Arial>This Fixlet removes users from the local "Administrators" group on a computer if they are not listed in a whitelist file deployed using the task:<BR></FONT><FONT size=3 face=Arial><STRONG>"Deploy ComplianceWhitelist File"</STRONG></FONT></P>
<P><FONT size=3 face=Arial></FONT>&nbsp;</P>
<P><FONT size=3><FONT face=Arial><STRONG><U>Action 1:<BR></U></STRONG></FONT><FONT face=Arial>Compares&nbsp;users who are&nbsp;Members of the local Administrators group&nbsp;on a computer with a "Compliant Admins" Whitelist file that exists on the&nbsp;client.&nbsp; It then&nbsp;instructs the endpoint to remove any users that are NOT on the&nbsp;Compliance White List from the Local Administrators group.</FONT></FONT></P>
<P><FONT size=3><STRONG><U>Action 2:<BR></U></STRONG>Prompts for a User ID that is then removed from the local "Administrators" group of the target endpoint.</FONT></P>
<P><FONT size=3>&nbsp;</FONT></P>
<P><FONT size=3><FONT color=#ff0000><STRONG>Note:<BR></STRONG></FONT><FONT color=#ff0000><STRONG>1.&nbsp; Before running this task you must create the file "ComplianceWhitelist.txt" on the BES Server in the following directory: </STRONG></FONT></FONT><FONT color=#ff0000 size=3><STRONG>"&lt;BES Server&gt;\wwwrootbes\CustomDownloads\ComplianceWhitelist"<BR>2.&nbsp; The Task "Deploy ComplianceWhitelist File" must be run before this Fixlet will work properly.</STRONG></FONT></P>]]></Description>
		<GroupRelevance JoinByIntersection="true">
			<SearchComponentPropertyReference PropertyName="OS" Comparison="Contains">
				<SearchText>Win</SearchText>
				<Relevance>exists (operating system) whose (it as string as lowercase contains "Win" as lowercase)</Relevance>
			</SearchComponentPropertyReference>
			<SearchComponentRelevance Comparison="IsTrue">
				<Relevance><![CDATA[(if exists file (parent folder of regapp "besclient.exe" as string & "\ComplianceWhitelist\ComplianceWhitelist.txt") then number of (elements of (set of ((following texts of firsts "\" of unique values of ((members of local group "Administrators") as string) as lowercase)) - set of (unique values of (lines of file (parent folder of regapp "besclient.exe" as string & "\ComplianceWhitelist\ComplianceWhitelist.txt"))))) > 0 else True OR name of operating system contains "Win" and (not exists file (parent folder of regapp "besclient.exe" as string & "\ComplianceWhitelist\ComplianceWhitelist.txt") or not exists folder (parent folder of regapp "besclient.exe" as string & "\ComplianceWhitelist")))]]></Relevance>
			</SearchComponentRelevance>
		</GroupRelevance>
		<Category>Utility-Manage Windows Admins</Category>
		<Source>Mike Consuegra</Source>
		<SourceID></SourceID>
		<SourceReleaseDate>2018-09-07</SourceReleaseDate>
		<SourceSeverity></SourceSeverity>
		<CVENames></CVENames>
		<SANSID></SANSID>
		<MIMEField>
			<Name>x-fixlet-modification-time</Name>
			<Value>Sun, 16 Sep 2018 03:27:09 +0000</Value>
		</MIMEField>
		<Domain>BESC</Domain>
		<DefaultAction ID="Action1">
			<Description>
				<PreLink></PreLink>
				<Link>Remove</Link>
				<PostLink><![CDATA[&nbsp;Users based on a pre-defined whitelist]]></PostLink>
			</Description>
			<ActionScript MIMEType="application/x-Fixlet-Windows-Shell"><![CDATA[// Verify that the whitelist file folder exists in the client directory
if "{exists folder (parent folder of regapp "BESClient.exe" as string & "\ComplianceWhitelist")}"

	// Delete any old version of the blacklist file
	delete "{(parent folder of regapp "BESClient.exe" as string) & "\ComplianceWhitelist\blacklist.txt"}"

	

	// Verify that the whitelist file in the ComplianceWhitelist folder exists
	if "{exists file (parent folder of regapp "BESClient.exe" as string & "\ComplianceWhitelist\ComplianceWhitelist.txt")}"
	

		// Verify that the whitelist file has not been modified by the user
		// If the hash of the file in the Client folder is the same as the backup file then remove the out-of-compliance admins.  
		// If the file hashes are different (the ELSE condition), copy the backup file to the client folder and remove the out-of-compliance admins.
		if "{sha1 of file (((data folder of client) as string) & "\__Global\__Download\actionsite\_listbackup.txt") = sha1 of file ((parent folder of regapp "BESClient.exe" as string) & "\ComplianceWhitelist\ComplianceWhitelist.txt")}"
		
			// Create the list of users that should NOT be in the Administrators Local Group (blacklist.txt)
			createfile until EOF
			{concatenation "%0d%0a" of (elements of (set of ((following texts of firsts "\" of unique values of ((members of local group "Administrators") as string) as lowercase)) - set of (unique values of (lines of file (parent folder of regapp "besclient.exe" as string & "\ComplianceWhitelist\ComplianceWhitelist.txt")))))}
			EOF
			move __createfile "{(parent folder of regapp "BESClient.exe" as string & "\ComplianceWhitelist\blacklist.txt")}"

			// Wait until the blacklist.txt is created
			pause while {not exists file ((parent folder of regapp "BESClient.exe" as string) & "\ComplianceWhitelist\blacklist.txt")}
		
			// Delete any users that are not supposed to be in the admin group 
			dos for /F "usebackq tokens=*" %A in ("{((parent folder of regapp "BESClient.exe" as string) & "\ComplianceWhitelist\blacklist.txt")}") do net localgroup administrators "%A" /delete
		
		else
			delete "{(parent folder of regapp "BESClient.exe" as string) & "\ComplianceWhitelist\ComplianceWhitelist.txt"}"
			dos copy /Y "{(((data folder of client) as string) & "\__Global\__Download\actionsite\_listbackup.txt")}" "{parent folder of regapp "BESClient.exe" as string & "\ComplianceWhitelist\ComplianceWhitelist.txt"}"

			// Create the list of users that should NOT be in the Administrators Local Group (blacklist.txt)
			createfile until EOF
			{concatenation "%0d%0a" of (elements of (set of ((following texts of firsts "\" of unique values of ((members of local group "Administrators") as string) as lowercase)) - set of (unique values of (lines of file (parent folder of regapp "besclient.exe" as string & "\ComplianceWhitelist\ComplianceWhitelist.txt")))))}
			EOF
			move __createfile "{(parent folder of regapp "BESClient.exe" as string & "\ComplianceWhitelist\blacklist.txt")}"

			// Wait until the blacklist.txt is created
			pause while {not exists file ((parent folder of regapp "BESClient.exe" as string) & "\ComplianceWhitelist\blacklist.txt")}

			// Remove unauthorized users from Admin group 
			dos for /F "usebackq tokens=*" %A in ("{((parent folder of regapp "BESClient.exe" as string) & "\ComplianceWhitelist\blacklist.txt")}") do net localgroup administrators "%A" /delete
	
		endif

	else

		dos copy /Y "{(((data folder of client) as string) & "\__Global\__Download\actionsite\_listbackup.txt")}" "{parent folder of regapp "BESClient.exe" as string & "\ComplianceWhitelist\ComplianceWhitelist.txt"}"

		// Create the list of users that should NOT be in the Administrators Local Group (blacklist.txt)
		createfile until EOF
		{concatenation "%0d%0a" of (elements of (set of ((following texts of firsts "\" of unique values of ((members of local group "Administrators") as string) as lowercase)) - set of (unique values of (lines of file (parent folder of regapp "besclient.exe" as string & "\ComplianceWhitelist\ComplianceWhitelist.txt")))))}
		EOF
		move __createfile "{(parent folder of regapp "BESClient.exe" as string & "\ComplianceWhitelist\blacklist.txt")}"

		// Wait until the blacklist.txt is created
		pause while {not exists file ((parent folder of regapp "BESClient.exe" as string) & "\ComplianceWhitelist\blacklist.txt")}
				
		// Remove unauthorized users from Admin group
		dos for /F "usebackq tokens=*" %A in ("{((parent folder of regapp "BESClient.exe" as string) & "\ComplianceWhitelist\blacklist.txt")}") do net localgroup administrators "%A" /delete

	endif


else

	// Create the ComplianceWhitelist folder in the client directory and copy the ComplianceWhitelist file from the backup file created by the "Deploy ComplianceWhitelist" task
	dos mkdir "{(parent folder of regapp "BESClient.exe" as string) & "\ComplianceWhitelist"}"
	dos copy /Y "{(((data folder of client) as string) & "\__Global\__Download\actionsite\_listbackup.txt")}" "{parent folder of regapp "BESClient.exe" as string & "\ComplianceWhitelist\ComplianceWhitelist.txt"}"
	
	// Delete any old version of the blacklist file
	delete "{(parent folder of regapp "BESClient.exe" as string) & "\ComplianceWhitelist\blacklist.txt"}"

	// Create the list of users that should NOT be in the Administrators Local Group (blacklist.txt)
	createfile until EOF
	{concatenation "%0d%0a" of (elements of (set of ((following texts of firsts "\" of unique values of ((members of local group "Administrators") as string) as lowercase)) - set of (unique values of (lines of file (parent folder of regapp "besclient.exe" as string & "\ComplianceWhitelist\ComplianceWhitelist.txt")))))}
	EOF
	move __createfile "{(parent folder of regapp "BESClient.exe" as string & "\ComplianceWhitelist\blacklist.txt")}"

	// Wait until the blacklist.txt is created
	pause while {not exists file ((parent folder of regapp "BESClient.exe" as string) & "\ComplianceWhitelist\blacklist.txt")}

	// Remove unauthorized users from Admin group
	dos for /F "usebackq tokens=*" %A in ("{((parent folder of regapp "BESClient.exe" as string) & "\ComplianceWhitelist\blacklist.txt")}") do net localgroup administrators "%A" /delete

endif]]></ActionScript>
		</DefaultAction>
		<Action ID="Action2">
			<Description>
				<PreLink></PreLink>
				<Link>Remove</Link>
				<PostLink><![CDATA[&nbsp;the specified User]]></PostLink>
			</Description>
			<ActionScript MIMEType="application/x-Fixlet-Windows-Shell">// Prompt the user for an ID to delete from the Administrators group of every targetted computer
action parameter query "UserID" with description "Enter the User ID to remove from the local Administrators group of targetted endpoints:" 


// Remove each user in the 'blacklist.txt' file from the Local Admin Group
dos net localgroup administrators "{parameter "UserID" of action}" /delete</ActionScript>
			<SuccessCriteria Option="RunToCompletion"></SuccessCriteria>
		</Action>
	</Fixlet>
</BES>
